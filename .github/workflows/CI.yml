name: CI

permissions:
  id-token: write
  contents: read    


on:
  push:
    branches:
      - feat/**
  workflow_dispatch:


env:
  
  AWS_ECS_CLUSTER: hello-world
  
  SERVICE_NAME: hello-world
  SERVICE_PORT: 8000
  SERVICE_BASE_PATH: /api-test/v1/
  SERVICE_HEALTH_PATH: /api-test/v1/salud
  SONAR_PROJECT_KEY: test_local

  AWS_ALB_NUMBER: 1
  AWS_ALB_PRIORITY: 2
  AWS_R53_SUB_DOMAIN: "apis"
  AWS_VPC_NAME: NMP-Servicios
  AWS_DEPLOY_REGION: us-east-2
  AWS_SAM_VERSION: 1.37.0
  
  BUILDPACK_LANGUAGE: paketo-buildpacks/nodejs
  BUILDPACK_BUILDER: paketobuildpacks/builder:base
  BUILDPACK_ENV_FILE: .buildpackenv

  
jobs:


  BuildDeploy:
    name: Build and deploy
    runs-on:
    - ubuntu-latest
    steps:
    - id: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1      

    - name: "CFN Lint - Linter de Cloudformation"
      run: |
        pip install cfn-lint==0.73.2
        cfn-lint service-components.yaml
        cfn-lint api-gateway.yaml

    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        cache: ${{env.JAVA_BUILD_TOOL}}

    - name: Setup Gradle
      if: ${{ env.JAVA_BUILD_TOOL == 'gradle'}}
      uses: gradle/gradle-build-action@v2
    
    - name: Execute Gradle SonarQube
      if: ${{ env.JAVA_BUILD_TOOL == 'gradle'}}
      run: |
        chmod +x gradlew
        sudo ./gradlew sonar -D "sonar.projectKey=${{env.SONAR_PROJECT_KEY}}" -D "sonar.host.url=${{ secrets.SONARQUBE_HOST }}" -D "sonar.login=${{ secrets.SONARQUBE_TOKEN }}" -D "sonar.projectName=${{env.SONAR_PROJECT_KEY}}"

    - name: Execute Maven SonarQube
      if: ${{ env.JAVA_BUILD_TOOL == 'maven'}}
      run: |
        mvn clean verify sonar:sonar -D "sonar.projectKey=${{env.SONAR_PROJECT_KEY}}" -D "sonar.host.url=${{ secrets.SONARQUBE_HOST }}" -D "sonar.login=${{ secrets.SONARQUBE_TOKEN }}" -D "sonar.projectName=${{env.SONAR_PROJECT_KEY}}"
        
    
    - name: SonarQube Scan
      if: ${{ env.JAVA_BUILD_TOOL != 'maven' && env.JAVA_BUILD_TOOL != 'gradle'}}
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
      with:
        args: >
          -Dsonar.sources=.
          -Dsonar.projectKey=${{env.SONAR_PROJECT_KEY}}

    - uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}

    # Configurar paketo https://paketo.io/
    - id: setup-pack
      uses: buildpacks/github-actions/setup-pack@v4.9.0

    - name: build image Java
      if: ${{ env.BUILDPACK_LANGUAGE == 'paketo-buildpacks/java'}}
      run: |
        pack build ${{ secrets.DOCKER_HUB_USER }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
        --builder ${{ env.BUILDPACK_BUILDER }} --path . --buildpack paketo-buildpacks/eclipse-openj9 --buildpack ${{ env.BUILDPACK_LANGUAGE }} \
        --env-file ${{ env.BUILDPACK_ENV_FILE }}

    - name: build image
      if: ${{ env.BUILDPACK_LANGUAGE != 'paketo-buildpacks/java'}}
      run: |
        pack build ${{ secrets.DOCKER_HUB_USER }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
        --builder ${{ env.BUILDPACK_BUILDER }} --path . --buildpack ${{ env.BUILDPACK_LANGUAGE }} \
        --env-file ${{ env.BUILDPACK_ENV_FILE }}
